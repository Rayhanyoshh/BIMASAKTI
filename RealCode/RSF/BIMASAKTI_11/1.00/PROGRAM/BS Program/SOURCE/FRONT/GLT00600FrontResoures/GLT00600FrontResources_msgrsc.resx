<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="_AccountName" xml:space="preserve">
    <value>Account Name</value>
  </data>
  <data name="_AccountNo" xml:space="preserve">
    <value>Account No</value>
  </data>
  <data name="_add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="_ammount" xml:space="preserve">
    <value>Ammount</value>
  </data>
  <data name="_approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="_baseCurrency" xml:space="preserve">
    <value>Base Currency</value>
  </data>
  <data name="_baseRate" xml:space="preserve">
    <value>Base Rate</value>
  </data>
  <data name="_btnApprove" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="_btnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="_btnCommit" xml:space="preserve">
    <value>Commit</value>
  </data>
  <data name="_btnSubmit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="_btnUndoCommit" xml:space="preserve">
    <value>Undo Commit</value>
  </data>
  <data name="_btnUndoSubmit" xml:space="preserve">
    <value>Undo Submit</value>
  </data>
  <data name="_cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="_center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="_commit" xml:space="preserve">
    <value>Commit</value>
  </data>
  <data name="_copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="_crBase" xml:space="preserve">
    <value>CR (Base)</value>
  </data>
  <data name="_createdBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="_createdDate" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="_credit" xml:space="preserve">
    <value>Credit</value>
  </data>
  <data name="_crlocal" xml:space="preserve">
    <value>CR (Local)</value>
  </data>
  <data name="_currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="_currencyRate" xml:space="preserve">
    <value>Currency Rate</value>
  </data>
  <data name="_dbBase" xml:space="preserve">
    <value>DB (Base)</value>
  </data>
  <data name="_dblocal" xml:space="preserve">
    <value>DB (Local)</value>
  </data>
  <data name="_dc" xml:space="preserve">
    <value>D/C</value>
  </data>
  <data name="_debit" xml:space="preserve">
    <value>Debit</value>
  </data>
  <data name="_delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="_department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="_desc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="_docDate" xml:space="preserve">
    <value>Document Date</value>
  </data>
  <data name="_docNo." xml:space="preserve">
    <value>Document No.</value>
  </data>
  <data name="_freq." xml:space="preserve">
    <value>Freq.</value>
  </data>
  <data name="_journalPeriod" xml:space="preserve">
    <value>Journal Period</value>
  </data>
  <data name="_localCurrency" xml:space="preserve">
    <value>Local Currency</value>
  </data>
  <data name="_masterRefNo" xml:space="preserve">
    <value>Master Ref. No.</value>
  </data>
  <data name="_modify" xml:space="preserve">
    <value>Modify</value>
  </data>
  <data name="_no" xml:space="preserve">
    <value>No.</value>
  </data>
  <data name="_prelist" xml:space="preserve">
    <value>Prelist</value>
  </data>
  <data name="_rapidApprove" xml:space="preserve">
    <value>Rapid Approval</value>
  </data>
  <data name="_rapidCommit" xml:space="preserve">
    <value>Rapid Commit</value>
  </data>
  <data name="_referenceDate" xml:space="preserve">
    <value>Reference Date</value>
  </data>
  <data name="_referenceNo" xml:space="preserve">
    <value>Reference No.</value>
  </data>
  <data name="_save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="_search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="_seq" xml:space="preserve">
    <value>Seq.</value>
  </data>
  <data name="_showAll" xml:space="preserve">
    <value>Show All</value>
  </data>
  <data name="_status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="_totalCredit" xml:space="preserve">
    <value>Total Credit</value>
  </data>
  <data name="_totalDebit" xml:space="preserve">
    <value>Total Debit</value>
  </data>
  <data name="_updateBy" xml:space="preserve">
    <value>Updated By</value>
  </data>
  <data name="_updateDate" xml:space="preserve">
    <value>Updated Date</value>
  </data>
  <data name="_validationAccountNo" xml:space="preserve">
    <value>Account No. is required!</value>
  </data>
  <data name="_validationAddEditDocDate" xml:space="preserve">
    <value>Please input Document Date first before input Journal Detail!</value>
  </data>
  <data name="_validationAddEditDocNo" xml:space="preserve">
    <value>Please input Document No. first before input Journal Detail!</value>
  </data>
  <data name="_validationAllowApprove" xml:space="preserve">
    <value>You don’t have right to approve this journal!</value>
  </data>
  <data name="_validationAlreadyExist" xml:space="preserve">
    <value>already exists!</value>
  </data>
  <data name="_validationBaseCurrencyBase" xml:space="preserve">
    <value>Base Currency Base Rate must be greater than 0!</value>
  </data>
  <data name="_validationBaseCurrencyRate" xml:space="preserve">
    <value>Base Currency Rate must be greater than 0!</value>
  </data>
  <data name="_validationCenterCode" xml:space="preserve">
    <value>Center Code is required for Account No.</value>
  </data>
  <data name="_validationCommit" xml:space="preserve">
    <value>Are you sure want to commit this journal? [Yes/No]</value>
  </data>
  <data name="_validationDataNotFound" xml:space="preserve">
    <value>Data Not Found!</value>
  </data>
  <data name="_validationDelete" xml:space="preserve">
    <value>Are you sure want to delete this journal?’[Yes/No]</value>
  </data>
  <data name="_validationDeptMandatory" xml:space="preserve">
    <value>Please select Department!</value>
  </data>
  <data name="_validationDescMandatory" xml:space="preserve">
    <value>Please input Description first before input Journal Detail!</value>
  </data>
  <data name="_validationDescReq" xml:space="preserve">
    <value>Description is required!</value>
  </data>
  <data name="_validationDocumentDateCannot" xml:space="preserve">
    <value>Invalid Document Date! Document Date cannot be before Current Period!</value>
  </data>
  <data name="_validationInputDocumentNo" xml:space="preserve">
    <value>Please input Document No.!</value>
  </data>
  <data name="_validationJournalAmount" xml:space="preserve">
    <value>Journal amount is not equal to Prelist!</value>
  </data>
  <data name="_validationJournalAmountCannotZero" xml:space="preserve">
    <value>Journal amount cannot be 0!</value>
  </data>
  <data name="_validationLocalCurrencyBase" xml:space="preserve">
    <value>Local Currency Base Rate must be greater than 0!</value>
  </data>
  <data name="_validationLocalCurrencyRate" xml:space="preserve">
    <value>Local Currency Rate must be greater than 0!</value>
  </data>
  <data name="_validationNoDataFound" xml:space="preserve">
    <value>No Data Found!</value>
  </data>
  <data name="_validationProcess" xml:space="preserve">
    <value>Are you sure want to process selected Journal(s)?</value>
  </data>
  <data name="_validationReferenceDateCannot" xml:space="preserve">
    <value>Reference Date cannot be before Current Period!</value>
  </data>
  <data name="_validationReferenceRequired" xml:space="preserve">
    <value>Reference No. is required!</value>
  </data>
  <data name="_validationSearchText" xml:space="preserve">
    <value>Please input keyword to search!</value>
  </data>
  <data name="_validationSearchTextMinimum" xml:space="preserve">
    <value>Minimum search keyword is 3 characters!</value>
  </data>
  <data name="_validationSubmit" xml:space="preserve">
    <value>Are you sure want to submit this journal? [Yes/No]</value>
  </data>
  <data name="_validationSuccesApprove" xml:space="preserve">
    <value>Selected Journal Approved Successfully!</value>
  </data>
  <data name="_validationSuccesCommit" xml:space="preserve">
    <value>Selected Journal Committed Successfully!</value>
  </data>
  <data name="_validationSuccesUndoCommit" xml:space="preserve">
    <value>Selected Journal Undo Commit Successfully!</value>
  </data>
  <data name="_validationTotalDebitTotalAmount" xml:space="preserve">
    <value>Total Debit Amount must be equal to Total Credit Amount</value>
  </data>
  <data name="_validationUndoCommit" xml:space="preserve">
    <value>Are you sure want to undo commit this journal? [Yes/No]</value>
  </data>
  <data name="_validationUndoSubmit" xml:space="preserve">
    <value>Are you sure want to undo submit this journal? [Yes/No]</value>
  </data>
  <data name="_validationYouHaventSave" xml:space="preserve">
    <value>You haven’t saved your changes. Are you sure want to cancel? [Yes/No]</value>
  </data>
  <data name="_voucherDate" xml:space="preserve">
    <value>Voucher Date</value>
  </data>
  <data name="_voucherNo" xml:space="preserve">
    <value>Voucher No.</value>
  </data>
</root>